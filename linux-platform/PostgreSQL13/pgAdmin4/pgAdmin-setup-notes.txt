Install pgadmin4:

  - Setup

	$ sudo yum install -y epel-release
	$ sudo yum makecache fast
	$ sudo yum install -y pgadmin4

  - Start and enable httpd service to start on boot

        $ sudo systemctl start httpd && sudo systemctl enable httpd

     -- You can confirm service status by running:

        $ sudo systemctl status httpd



------------------------------------------------------------------------------------------------
Configure VirtualHost: 

   
  - Edit the Apache configuration file to add/update a VirtualHost as appears below, Make sure port '80' is not already in use. If used already then choose a different port accordingly:

    $ sudo vim /etc/httpd/conf.d/pgadmin4.conf

        Original:::

	LoadModule wsgi_module modules/mod_wsgi.so
	WSGIDaemonProcess pgadmin processes=1 threads=25 python-home=/usr/pgadmin4/venv
	WSGIScriptAlias /pgadmin4 /usr/pgadmin4/web/pgAdmin4.wsgi

	<Directory /usr/pgadmin4/web/>
		WSGIProcessGroup pgadmin
		WSGIApplicationGroup %{GLOBAL}
		<IfModule mod_authz_core.c>
		        # Apache 2.4
		        Require all granted
		</IfModule>
		<IfModule !mod_authz_core.c>
		        # Apache 2.2
		        Order Deny,Allow
		        Deny from All
		        Allow from 127.0.0.1
		        Allow from ::1
		</IfModule>
	</Directory>

	Updated::::

	<VirtualHost *:80>
	LoadModule wsgi_module modules/mod_wsgi.so
	WSGIDaemonProcess pgadmin processes=1 threads=25 python-home=/usr/pgadmin4/venv
	WSGIScriptAlias /pgadmin4 /usr/pgadmin4/web/pgAdmin4.wsgi

	<Directory /usr/pgadmin4/web/>
		WSGIProcessGroup pgadmin
		WSGIApplicationGroup %{GLOBAL}
		<IfModule mod_authz_core.c>
		        # Apache 2.4
		        Require all granted
		</IfModule>
		<IfModule !mod_authz_core.c>
		        # Apache 2.2
		        Order Deny,Allow
		        Deny from All
		        Allow from 127.0.0.1
		        Allow from ::1
		</IfModule>
	</Directory>
	</VirtualHost>


   - Confirm the above edit and syntax are ok and then restart httpd:

      $ sudo httpd -t && sudo systemctl restart httpd
----------------------------------------------------------------------------------------------------

Configure Data Directories:

    - Create data directories to be used by pgAdmin4 and provide the directories in the config file:

      $ sudo mkdir -p /var/lib/pgadmin4/ /var/log/pgadmin4/

      $ sudo vim /usr/pgadmin4/web/config_distro.py

      # Add the following in config_distro.py file:

	    LOG_FILE = '/var/log/pgadmin4/pgadmin4.log'
	    SQLITE_PATH = '/var/lib/pgadmin4/pgadmin4.db'
	    SESSION_DB_PATH = '/var/lib/pgadmin4/sessions'
	    STORAGE_DIR = '/var/lib/pgadmin4/storage'

    - Set permissions for pgAdmin directories to apache user

       $ sudo chown -R apache:apache /var/lib/pgadmin4 /var/log/pgadmin4

----------------------------------------------------------------------------------------------------

Execute the setup.py:

  $ sudo /usr/pgadmin4/venv/bin/python3 /usr/pgadmin4/web/setup.py

    - Provide an email address (will be used as userId) & provide password when prompted

	Email address: admin@abhinav.com 
	Password: <INPUT PASSWORD>
	Retype password:<Confirm PASSWORD>
	pgAdmin 4 - Application Initialisation
	======================================
-----------------------------------------------------------------------------------------------------

Configure SELinux (if status is Enforced/Enforcing):

SELinux gives that extra layer of security to the resources in the system. It provides the MAC (mandatory access control) as contrary to the DAC (Discretionary access control). SELinux can operate in any of the 3 modes :
        Enforced : Actions contrary to the policy are blocked and a corresponding event is logged in the audit log.
        Permissive : Permissive mode loads the SELinux software, but doesnâ€™t enforce the rules, only logging is performed.
        Disabled : The SELinux is disabled entirely.
        
	To check the status of SELinux, use either of the below command:

        $ sudo getenforce

        $ sudo sestatus

        If status says 'Enforcing', then follow the below steps for pgAdmin4:
            Create and apply a policy to allow Apache user access pgAdmin directories.

            $ sudo semanage fcontext -a -t httpd_sys_rw_content_t "/var/lib/pgadmin4(/.*)?"

            $ sudo semanage fcontext -a -t httpd_sys_rw_content_t "/var/log/pgadmin4(/.*)?"

            $ sudo restorecon -R /var/lib/pgadmin4/

            $ sudo restorecon -R /var/log/pgadmin4/

            Restart 'httpd' service.

            $ sudo systemctl restart httpd

    To access pgAdmin 4 Web Interface, if you have an active firewall service, allow http port

    $ sudo firewall-cmd --permanent --add-service=http

    $ sudo firewall-cmd --reload

    To launch pgadmin4 use below url (you can use server name setup as part of virtual host config above):

    http://localhost:80/pgadmin4/login?next=%2Fpgadmin4%2F



    In case you are not able to connect from pgAdmin due to SELinux preventing the connection, then execute following commands and restart postgresql-13

    $ sudo semanage port -a -t postgresql_port_t -p tcp 5432

    $ sudo setsebool -P httpd_can_network_connect_db 1

